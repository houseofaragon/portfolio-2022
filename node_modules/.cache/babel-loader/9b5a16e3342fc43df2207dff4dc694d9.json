{"ast":null,"code":"import _objectSpread from \"/Users/jak/repos/karen/bestservedbold-christmas-baubles/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/Users/jak/repos/karen/bestservedbold-christmas-baubles/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectWithoutProperties from \"/Users/jak/repos/karen/bestservedbold-christmas-baubles/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _toConsumableArray from \"/Users/jak/repos/karen/bestservedbold-christmas-baubles/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nvar _excluded = [\"vec\"];\n\nvar _jsxFileName = \"/Users/jak/repos/karen/bestservedbold-christmas-baubles/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _this = this;\n\nimport * as THREE from \"three\";\nimport { useEffect } from \"react\";\nimport { Canvas, useFrame, useThree } from \"@react-three/fiber\";\nimport { Physics, usePlane, useCompoundBody, useSphere } from \"@react-three/cannon\";\nimport { Environment, useGLTF } from \"@react-three/drei\";\nimport { EffectComposer, SSAO } from \"@react-three/postprocessing\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar baubleMaterial = new THREE.MeshLambertMaterial({\n  color: \"#c0a090\",\n  emissive: \"red\"\n});\nvar capMaterial = new THREE.MeshStandardMaterial({\n  metalness: 1,\n  roughness: 0.15,\n  color: \"#8a300f\",\n  emissive: \"#600000\",\n  envMapIntensity: 9\n});\nvar sphereGeometry = new THREE.SphereGeometry(1, 28, 28);\n\nvar baubles = _toConsumableArray(Array(50)).map(function () {\n  return {\n    args: [0.6, 0.6, 0.8, 0.8, 1][Math.floor(Math.random() * 5)],\n    mass: 1,\n    angularDamping: 0.2,\n    linearDamping: 0.95\n  };\n});\n\nfunction Bauble(_ref) {\n  _s();\n\n  var _ref$vec = _ref.vec,\n      vec = _ref$vec === void 0 ? new THREE.Vector3() : _ref$vec,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _useGLTF = useGLTF(\"/cap.glb\"),\n      nodes = _useGLTF.nodes;\n\n  var _useCompoundBody = useCompoundBody(function () {\n    return _objectSpread(_objectSpread({}, props), {}, {\n      shapes: [{\n        type: \"Box\",\n        position: [0, 0, 1.2 * props.args],\n        args: new THREE.Vector3().setScalar(props.args * 0.4).toArray()\n      }, {\n        type: \"Sphere\",\n        args: [props.args]\n      }]\n    });\n  }),\n      _useCompoundBody2 = _slicedToArray(_useCompoundBody, 2),\n      ref = _useCompoundBody2[0],\n      api = _useCompoundBody2[1];\n\n  useEffect(function () {\n    return api.position.subscribe(function (p) {\n      return api.applyForce(vec.set.apply(vec, _toConsumableArray(p)).normalize().multiplyScalar(-props.args * 35).toArray(), [0, 0, 0]);\n    });\n  }, [api]); // prettier-ignore\n\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    ref: ref,\n    dispose: null,\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      castShadow: true,\n      receiveShadow: true,\n      scale: props.args,\n      geometry: sphereGeometry,\n      material: baubleMaterial\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      castShadow: true,\n      scale: 2.5 * props.args,\n      position: [0, 0, -1.8 * props.args],\n      geometry: nodes.Mesh_1.geometry,\n      material: capMaterial\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Bauble, \"mNVEJzEuyiLYovaPDXNbV+m7wQs=\", false, function () {\n  return [useGLTF, useCompoundBody];\n});\n\n_c = Bauble;\n\nfunction Collisions() {\n  _s2();\n\n  var viewport = useThree(function (state) {\n    return state.viewport;\n  });\n  usePlane(function () {\n    return {\n      position: [0, 0, 0],\n      rotation: [0, 0, 0]\n    };\n  });\n  usePlane(function () {\n    return {\n      position: [0, 0, 8],\n      rotation: [0, -Math.PI, 0]\n    };\n  });\n  usePlane(function () {\n    return {\n      position: [0, -4, 0],\n      rotation: [-Math.PI / 2, 0, 0]\n    };\n  });\n  usePlane(function () {\n    return {\n      position: [0, 4, 0],\n      rotation: [Math.PI / 2, 0, 0]\n    };\n  });\n\n  var _useSphere = useSphere(function () {\n    return {\n      type: \"Kinematic\",\n      args: [2]\n    };\n  }),\n      _useSphere2 = _slicedToArray(_useSphere, 2),\n      api = _useSphere2[1];\n\n  return useFrame(function (state) {\n    return api.position.set(state.mouse.x * viewport.width / 2, state.mouse.y * viewport.height / 2, 2.5);\n  });\n}\n\n_s2(Collisions, \"4x3wpB3rKXWAWEfGjuAyueVzM88=\", false, function () {\n  return [useThree, usePlane, usePlane, usePlane, usePlane, useSphere, useFrame];\n});\n\n_c2 = Collisions;\nexport var App = function App() {\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    shadows: true,\n    dpr: 1.5,\n    gl: {\n      alpha: true,\n      stencil: false,\n      depth: false,\n      antialias: false\n    },\n    camera: {\n      position: [0, 0, 20],\n      fov: 35,\n      near: 10,\n      far: 40\n    },\n    onCreated: function onCreated(state) {\n      return state.gl.toneMappingExposure = 1.5;\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {\n      intensity: 0.75\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(\"spotLight\", {\n      position: [20, 20, 25],\n      penumbra: 1,\n      angle: 0.2,\n      color: \"white\",\n      castShadow: true,\n      \"shadow-mapSize\": [512, 512]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(\"directionalLight\", {\n      position: [0, 5, -4],\n      intensity: 4\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(\"directionalLight\", {\n      position: [0, -15, -0],\n      intensity: 4,\n      color: \"red\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(Physics, {\n      gravity: [0, 0, 0],\n      iterations: 10,\n      broadphase: \"SAP\",\n      children: [/*#__PURE__*/_jsxDEV(Collisions, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, _this), baubles.map(function (props, i) {\n        return /*#__PURE__*/_jsxDEV(Bauble, _objectSpread({}, props), i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 34\n        }, _this);\n      })\n      /* prettier-ignore */\n      ]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(Environment, {\n      files: \"/adamsbridge.hdr\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(EffectComposer, {\n      multisampling: 0,\n      children: [/*#__PURE__*/_jsxDEV(SSAO, {\n        samples: 11,\n        radius: 30,\n        intensity: 20,\n        luminanceInfluence: 0.6,\n        color: \"red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(SSAO, {\n        samples: 21,\n        radius: 5,\n        intensity: 30,\n        luminanceInfluence: 0.6,\n        color: \"red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 3\n  }, _this);\n};\n_c3 = App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Bauble\");\n$RefreshReg$(_c2, \"Collisions\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/Users/jak/repos/karen/bestservedbold-christmas-baubles/src/App.js"],"names":["THREE","useEffect","Canvas","useFrame","useThree","Physics","usePlane","useCompoundBody","useSphere","Environment","useGLTF","EffectComposer","SSAO","baubleMaterial","MeshLambertMaterial","color","emissive","capMaterial","MeshStandardMaterial","metalness","roughness","envMapIntensity","sphereGeometry","SphereGeometry","baubles","Array","map","args","Math","floor","random","mass","angularDamping","linearDamping","Bauble","vec","Vector3","props","nodes","shapes","type","position","setScalar","toArray","ref","api","subscribe","p","applyForce","set","normalize","multiplyScalar","Mesh_1","geometry","Collisions","viewport","state","rotation","PI","mouse","x","width","y","height","App","alpha","stencil","depth","antialias","fov","near","far","gl","toneMappingExposure","i"],"mappings":"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","sourcesContent":["import * as THREE from \"three\"\nimport { useEffect } from \"react\"\nimport { Canvas, useFrame, useThree } from \"@react-three/fiber\"\nimport { Physics, usePlane, useCompoundBody, useSphere } from \"@react-three/cannon\"\nimport { Environment, useGLTF } from \"@react-three/drei\"\nimport { EffectComposer, SSAO } from \"@react-three/postprocessing\"\n\nconst baubleMaterial = new THREE.MeshLambertMaterial({ color: \"#c0a090\", emissive: \"red\" })\nconst capMaterial = new THREE.MeshStandardMaterial({ metalness: 1, roughness: 0.15, color: \"#8a300f\", emissive: \"#600000\", envMapIntensity: 9 })\nconst sphereGeometry = new THREE.SphereGeometry(1, 28, 28)\nconst baubles = [...Array(50)].map(() => ({ args: [0.6, 0.6, 0.8, 0.8, 1][Math.floor(Math.random() * 5)], mass: 1, angularDamping: 0.2, linearDamping: 0.95 }))\n\nfunction Bauble({ vec = new THREE.Vector3(), ...props }) {\n  const { nodes } = useGLTF(\"/cap.glb\")\n  const [ref, api] = useCompoundBody(() => ({\n    ...props,\n    shapes: [\n      { type: \"Box\", position: [0, 0, 1.2 * props.args], args: new THREE.Vector3().setScalar(props.args * 0.4).toArray() },\n      { type: \"Sphere\", args: [props.args] },\n    ],\n  }))\n  useEffect(() => api.position.subscribe((p) => api.applyForce(vec.set(...p).normalize().multiplyScalar(-props.args * 35).toArray(), [0, 0, 0])), [api]) // prettier-ignore\n  return (\n    <group ref={ref} dispose={null}>\n      <mesh castShadow receiveShadow scale={props.args} geometry={sphereGeometry} material={baubleMaterial} />\n      <mesh castShadow scale={2.5 * props.args} position={[0, 0, -1.8 * props.args]} geometry={nodes.Mesh_1.geometry} material={capMaterial} />\n    </group>\n  )\n}\n\nfunction Collisions() {\n  const viewport = useThree((state) => state.viewport)\n  usePlane(() => ({ position: [0, 0, 0], rotation: [0, 0, 0] }))\n  usePlane(() => ({ position: [0, 0, 8], rotation: [0, -Math.PI, 0] }))\n  usePlane(() => ({ position: [0, -4, 0], rotation: [-Math.PI / 2, 0, 0] }))\n  usePlane(() => ({ position: [0, 4, 0], rotation: [Math.PI / 2, 0, 0] }))\n  const [, api] = useSphere(() => ({ type: \"Kinematic\", args: [2] }))\n  return useFrame((state) => api.position.set((state.mouse.x * viewport.width) / 2, (state.mouse.y * viewport.height) / 2, 2.5))\n}\n\nexport const App = () => (\n  <Canvas\n    shadows\n    dpr={1.5}\n    gl={{ alpha: true, stencil: false, depth: false, antialias: false }}\n    camera={{ position: [0, 0, 20], fov: 35, near: 10, far: 40 }}\n    onCreated={(state) => (state.gl.toneMappingExposure = 1.5)}>\n    <ambientLight intensity={0.75} />\n    <spotLight position={[20, 20, 25]} penumbra={1} angle={0.2} color=\"white\" castShadow shadow-mapSize={[512, 512]} />\n    <directionalLight position={[0, 5, -4]} intensity={4} />\n    <directionalLight position={[0, -15, -0]} intensity={4} color=\"red\" />\n    <Physics gravity={[0, 0, 0]} iterations={10} broadphase=\"SAP\">\n      <Collisions />\n      {baubles.map((props, i) => <Bauble key={i} {...props} />) /* prettier-ignore */}\n    </Physics>\n    <Environment files=\"/adamsbridge.hdr\" />\n    <EffectComposer multisampling={0}>\n      <SSAO samples={11} radius={30} intensity={20} luminanceInfluence={0.6} color=\"red\" />\n      <SSAO samples={21} radius={5} intensity={30} luminanceInfluence={0.6} color=\"red\" />\n    </EffectComposer>\n  </Canvas>\n)\n"]},"metadata":{},"sourceType":"module"}